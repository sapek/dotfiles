let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd E:\BrainSlice\src\Hw\Apps\BrainSlice
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +388 RTL\MessageProcessing\OutputMessageProcessor.sv
badd +449 RTL\BrainSliceTop.sv
badd +209 RTL\Role.sv
badd +200 RTL\MessageProcessing\InputMessageProcessor.sv
badd +44 D:\Nuget\Catapult.HaaS.Rtl.0.4.4\HaasTypes.sv
badd +44 Schemas\CommonFunctions.bond
badd +8 Schemas\Turing.bond
badd +6 Schemas\BrainSlice.bond
badd +73 RTL\BrainSliceTelemetry.sv
argglobal
silent! argdel *
$argadd RTL\MessageProcessing\OutputMessageProcessor.sv
set lines=69 columns=258
winpos 475 63
edit Schemas\CommonFunctions.bond
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winminheight=1 winheight=1 winminwidth=1 winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 51 - ((3 * winheight(0) + 33) / 66)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
51
normal! 0
lcd E:\BrainSlice\src\Hw\Apps\BrainSlice
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=aoO
set winminheight=1 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
